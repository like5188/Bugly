apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        multiDexEnabled true// api 21及以上，可以只添加此配置，不需要再引用com.android.support:multidex:1.0.3

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

}

dependencies {
    // support
    compileOnly 'com.android.support:appcompat-v7:28.0.0'
    // kotlin
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    compileOnly 'com.android.support:multidex:1.0.3'

    // 渠道打包神器api，用于读取渠道号
    compileOnly 'com.meituan.android.walle:library:1.1.6'
    // 异常上报
    compileOnly 'com.tencent.bugly:crashreport_upgrade:1.3.8'
    // 想使用NDK库，需要配置：nativecrashreport
    compileOnly 'com.tencent.bugly:nativecrashreport:3.6.0.1'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    compileOnly 'com.tencent.tinker:tinker-android-lib:1.9.9'
}

// 引用脚本插件，其实这不能算一个插件，它只是一个脚本。应用脚本插件，其实就是把这个脚本加载进来，和二进制插件不同的是它使用的是from关键字.后面紧跟的坫一个脚本文件，可以是本地的，也可以是网络存在的
apply from: rootProject.file('./gradle-mvn-push.gradle')
